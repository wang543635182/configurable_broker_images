#!/bin/bash

# 此脚本测试docker-compose.yml编排的tomcat服务是否可用

appname="tomcat_test"
COMPOSE_PATH="./docker-compose.yml"
TMP_COMPOSE_PATH="./temp_docker-compose.yml"

# 要替换的参数有
password=123456
maxmemory=""
minmemory=""


TOMCAT_SERVER_URI_ENCODING=""
TOMCAT_SERVER_CONNECTION_TIMEOUT=""
TOMCAT_SERVER_MAX_THREADS=""
TOMCAT_SERVER_MIN_SPARE_THREADS=""
TOMCAT_SERVER_DISABLE_UPLOAD_TIMEOUT=""
TOMCAT_SERVER_CONNECTION_UPLOAD_TIMEOUT=""
TOMCAT_SERVER_ENABLE_LOOKUPS=""
TOMCAT_SERVER_KEEP_ALIVE_TIMEOUT=""
TOMCAT_SERVER_COMPRESSION=""
TOMCAT_SERVER_COMPRESSABLE_MIME_TYPE=""

TOMCAT_CONTEXT_RESOURCE=""

TOMCAT_CATALINA_JVM_XMS=""
TOMCAT_CATALINA_JVM_XMX=""
TOMCAT_CATALINA_JVM_XSS=""

if [  -f "$TMP_COMPOSE_PATH" ]; then
   rm "$TMP_COMPOSE_PATH"
fi

cp "$COMPOSE_PATH" "$TMP_COMPOSE_PATH"

password=123456
maxmemory=""
minmemory=""


TOMCAT_SERVER_URI_ENCODING=""
TOMCAT_SERVER_CONNECTION_TIMEOUT=""
TOMCAT_SERVER_MAX_THREADS=""
TOMCAT_SERVER_MIN_SPARE_THREADS=""
TOMCAT_SERVER_DISABLE_UPLOAD_TIMEOUT=""
TOMCAT_SERVER_CONNECTION_UPLOAD_TIMEOUT=""
TOMCAT_SERVER_ENABLE_LOOKUPS=""
TOMCAT_SERVER_KEEP_ALIVE_TIMEOUT=""
TOMCAT_SERVER_COMPRESSION=""
TOMCAT_SERVER_COMPRESSABLE_MIME_TYPE=""

TOMCAT_CONTEXT_RESOURCE=""

TOMCAT_CATALINA_JVM_XMS=""
TOMCAT_CATALINA_JVM_XMX=""
TOMCAT_CATALINA_JVM_XSS=""

sedCmd="s/{{password}}/${password}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{maxmemory}}/${maxmemory}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{minmemory}}/${minmemory}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_URI_ENCODING}}/${TOMCAT_SERVER_URI_ENCODING}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_CONNECTION_TIMEOUT}}/${TOMCAT_SERVER_CONNECTION_TIMEOUT}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_MAX_THREADS}}/${TOMCAT_SERVER_MAX_THREADS}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_MIN_SPARE_THREADS}}/${TOMCAT_SERVER_MIN_SPARE_THREADS}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_DISABLE_UPLOAD_TIMEOUT}}/${TOMCAT_SERVER_DISABLE_UPLOAD_TIMEOUT}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_CONNECTION_UPLOAD_TIMEOUT}}/${TOMCAT_SERVER_CONNECTION_UPLOAD_TIMEOUT}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_ENABLE_LOOKUPS}}/${TOMCAT_SERVER_ENABLE_LOOKUPS}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_KEEP_ALIVE_TIMEOUT}}/${TOMCAT_SERVER_KEEP_ALIVE_TIMEOUT}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_COMPRESSION}}/${TOMCAT_SERVER_COMPRESSION}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_SERVER_COMPRESSABLE_MIME_TYPE}}/${TOMCAT_SERVER_COMPRESSABLE_MIME_TYPE}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_CONTEXT_RESOURCE}}/${TOMCAT_CONTEXT_RESOURCE}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_CATALINA_JVM_XMS}}/${TOMCAT_CATALINA_JVM_XMS}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_CATALINA_JVM_XMX}}/${TOMCAT_CATALINA_JVM_XMX}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH

sedCmd="s/{{TOMCAT_CATALINA_JVM_XSS}}/${TOMCAT_CATALINA_JVM_XSS}/g"
sed -i "$sedCmd" $TMP_COMPOSE_PATH



# swarm模式
#docker swarm init
docker stack deploy -c "$TMP_COMPOSE_PATH" "$appname"